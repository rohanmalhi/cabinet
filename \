#!/bin/bash

cmd="$1"
arg="$2"

: "${CAB_DIR:=$HOME/.config/cabinet}"
: "${CAB_CONF:=$CAB_DIR/cabinet.conf}"
: "${CAB_BRANCH:=$(git config --get init.defaultBranch)}"
: "${CAB_REMOTE:?Error: CAB_REPO is not set}"
: "${CAB_BACKUP:=$CAB_DIR/backup}"

if [[ ! -f "$CAB_CONF" ]]; then
   echo "Configuration not found!"
   echo "Please generate a config or adjust the path using CAB_CONF or CAB_DIR"
   exit 1
fi 

mapfile -t paths < "$CAB_CONF"

mkdir -p "$CAB_DIR"
mkdir -p "$CAB_DIR/repo"
mkdir -p "$CAB_DIR/backup"
mkdir -p "$CAB_DIR/repo/.config"
mkdir -p "$CAB_DIR/backup/.config"

cd "$CAB_DIR/repo"

case "$cmd" in
   init)
      cd "$CAB_DIR/repo"
      git init
      git remote add origin "$CAB_REMOTE"
      git branch --set-upstream-to=origin/"$CAB_BRANCH" "$CAB_BRANCH"
      ;;
   push)
      echo "Pushing your dotfiles..."
      for file in "${paths[@]}"; do 
         echo "Syncing $file"
         sudo cp -r "$HOME/.config/$file" "$CAB_DIR/repo/.config/$file"
         git add $file
      done

      git commit -m `"Sync from $HOSTNAME" '+%d/%m/%Y_%H:%M:%S'`
      git pull
      git push --set-upstream origin "$CAB_BRANCH"
      ;;
   pull)
      git pull origin "$CAB_BRANCH"
      for file in "${paths[@]}"; do
         echo "Working on $file"
         sudo rsync -a --exclude "$CAB_BACKUP" "$HOME/.config/$file" "$CAB_DIR/backup/.config/$file"
         sudo cp -r "$CAB_DIR/repo/.config/$file" "$HOME/.config/$file"
      done
      ;;
   add)
      if [ -z "$arg" ]; then
         echo "Usage: $0 add <relative/path/to/file>"
         exit 1
      fi 
      
      if [ ! -f "$HOME?.config/$arg" ]; then
         echo "File not found: $arg"
         echo "Note: file paths should be relative to $HOME/.config"
         exit 1
      fi 

      grep -qxF "$arg" "$CAB_CONF" || echo "$arg" >> "$CAB_CONF"
      ;;
   *)
      echo "Error: unknown argument"
      ;;
esac
