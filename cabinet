#!/bin/bash

arg="$1"

: "${CAB_DIR:=$HOME/.config/cabinet}"
: "${CAB_CONF:=$CAB_DIR/cabinet.conf}"
: "${CAB_BRANCH:=$(git config --get init.defaultBranch)}"
: "${CAB_REPO:?Error: CAB_REPO is not set}"
: "${CAB_BACKUP:=$CAB_DIR/backup}"

dotgit() {
   git --git-dir="$CAB_DIR/git" --work-tree="$HOME" "$@"
}

paths_file="$CAB_CONF"

mkdir -p "$CAB_DIR"
mkdir -p "$CAB_BACKUP"

if [[ ! -f "$paths_file" ]]; then
	echo "Configuration file not found!"
	echo "Please generate a config or adjust the path using CAB_CONF or CAB_DIR" 
	exit 1
fi

mapfile -t paths < "$paths_file"

echo "Files to sync:"
for path in "${paths[@]}"; do
	echo "$path"
done

cd "$CAB_DIR"

dotgit init
dotgit remote add origin $CAB_REPO

cd "$HOME/.config"

case "$arg" in 
	push)
		echo "Pushing dotfiles..."
		for path in "${paths[@]}"; do
         dotgit add "$path"
		done
      dotgit commit -m "Automated by Cabinet"
      dotgit push --set-upstream origin "$CAB_BRANCH"
		;;
	pull)
		echo "Pulling dotfiles..."
		
      dotgit fetch origin "$CAB_BRANCH"

		for path in "${paths[@]}"; do
			echo "Pulling $path from remote..."
         dotgit checkout FETCH_HEAD -- "$path"
		done
		;;
	*)
		echo "Error: unknown argument"
		;;
esac
